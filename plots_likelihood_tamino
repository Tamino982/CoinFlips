{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "┌ Info: Precompiling Distributions [31c24e10-a181-5473-b8eb-7969acd0382f]\n",
      "└ @ Base loading.jl:1260\n"
     ]
    }
   ],
   "source": [
    "using Distributions\n",
    "using PyPlot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "prob (generic function with 1 method)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "function prob(observed_data, model_parameter)\n",
    "    n1 = observed_data[1]\n",
    "    n2 = observed_data[2]\n",
    "    N = n1 + n2\n",
    "    \n",
    "    p = model_parameter[1]\n",
    "    \n",
    "    return pdf(Binomial(N, p), n1)\n",
    "#     return binomial(N, n1) * p^n1 * (1-p)^n2\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "Figure(PyObject <Figure size 640x480 with 1 Axes>)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "PyObject <matplotlib.legend.Legend object at 0x941796f0>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = 0 : 0.01 : 1\n",
    "\n",
    "observed_data = [167,63] #916.txt\n",
    "y= [prob(observed_data, [xi]) for xi in x];\n",
    "plot(x, y, label = string(observed_data))\n",
    "\n",
    "\n",
    "observed_data = [130,100] #829.txt\n",
    "y= [prob(observed_data, [xi]) for xi in x];\n",
    "plot(x, y, label = string(observed_data))\n",
    "\n",
    "observed_data = [136,80] #384.txt\n",
    "y= [ prob(observed_data, [xi])  for xi in x];\n",
    "plot(x, y, label = string(observed_data))\n",
    "\n",
    "observed_data = [117,92] #294.txt\n",
    "y= [prob(observed_data, [xi]) for xi in x];\n",
    "plot(x, y, label = string(observed_data))\n",
    "\n",
    "observed_data = [87,127] #183.txt\n",
    "y= [prob(observed_data, [xi]) for xi in x];\n",
    "plot(x, y, label = string(observed_data))\n",
    "\n",
    "ylabel(\"Likelihood\")\n",
    "xlabel(\"p\")\n",
    "# yscale(\"log\")\n",
    "legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "using Optim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2-element Array{Int64,1}:\n",
       "  91\n",
       " 110"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "observed_data = [91,110]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "optimize(func, [0.1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       " * Status: success\n",
       "\n",
       " * Candidate solution\n",
       "    Minimizer: [4.53e-01]\n",
       "    Minimum:   -5.646046e-02\n",
       "\n",
       " * Found with\n",
       "    Algorithm:     Newton's Method\n",
       "    Initial Point: [5.00e-01]\n",
       "\n",
       " * Convergence measures\n",
       "    |x - x'|               = 4.12e-05 ≰ 0.0e+00\n",
       "    |x - x'|/|x'|          = 9.10e-05 ≰ 0.0e+00\n",
       "    |f(x) - f(x')|         = 3.89e-08 ≰ 0.0e+00\n",
       "    |f(x) - f(x')|/|f(x')| = 6.89e-07 ≰ 0.0e+00\n",
       "    |g(x)|                 = 0.00e+00 ≤ 1.0e-08\n",
       "\n",
       " * Work counters\n",
       "    Seconds run:   0  (vs limit Inf)\n",
       "    Iterations:    3\n",
       "    f(x) calls:    7\n",
       "    ∇f(x) calls:   7\n",
       "    ∇²f(x) calls:  3\n"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res = optimize(p -> -prob(observed_data, p ), [0.5], Newton())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1-element Array{Float64,1}:\n",
       " 0.45273631841262263"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Optim.minimizer(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.4527363184079602"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "observed_data[1] / (observed_data[1] + observed_data[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "false"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Optim.minimizer(res)[1]  == observed_data[1] / (observed_data[1] + observed_data[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "true"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Optim.minimizer(res)[1] ≈ observed_data[1] / (observed_data[1] + observed_data[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Julia 1.4.1",
   "language": "julia",
   "name": "julia-1.4"
  },
  "language_info": {
   "file_extension": ".jl",
   "mimetype": "application/julia",
   "name": "julia",
   "version": "1.4.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
